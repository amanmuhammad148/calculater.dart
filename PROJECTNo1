import 'package:flutter/material.dart';

void main() {
  runApp(CalculatorApp());
}

class CalculatorApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Calculator',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: CalculatorScreen(),
    );
  }
}

class CalculatorScreen extends StatefulWidget {
  @override
  _CalculatorScreenState createState() => _CalculatorScreenState();
}

class _CalculatorScreenState extends State<CalculatorScreen> {
  String _display = '0';
  String _operation = '';
  String _previousValue = '';

  void _onButtonPressed(String value) {
    setState(() {
      if (value == 'C') {
        _display = '0';
        _operation = '';
        _previousValue = '';
      } else if (value == '=') {
        try {
          _display = _evaluateExpression(_operation).toString();
          _operation = _display;
        } catch (e) {
          _display = 'Error';
        }
      } else if (['+', '-', '*', '/'].contains(value)) {
        if (_operation.isNotEmpty) {
          _display = _evaluateExpression(_operation).toString();
        }
        _operation = _display + value;
      } else {
        if (_operation == '0') {
          _operation = value;
        } else {
          _operation += value;
        }
        _display = _operation;
      }
    });
  }

  double _evaluateExpression(String expression) {
    // Note: This is a very basic implementation for the purpose of this example.
    // For more complex expressions, consider using a library or proper parsing.
    final parsedExpression = expression.replaceAll('x', '*').replaceAll('รท', '/');
    final result = double.parse(parsedExpression);
    return result;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Calculator'),
      ),
      body: Column(
        children: <Widget>[
          Expanded(
            child: Container(
              padding: EdgeInsets.all(16.0),
              alignment: Alignment.centerRight,
              child: Text(
                _display,
                style: TextStyle(fontSize: 48.0),
              ),
            ),
          ),
          Row(
            children: <Widget>[
              _buildButton('7'),
              _buildButton('8'),
              _buildButton('9'),
              _buildButton('/'),
            ],
          ),
          Row(
            children: <Widget>[
              _buildButton('4'),
              _buildButton('5'),
              _buildButton('6'),
              _buildButton('*'),
            ],
          ),
          Row(
            children: <Widget>[
              _buildButton('1'),
              _buildButton('2'),
              _buildButton('3'),
              _buildButton('-'),
            ],
          ),
          Row(
            children: <Widget>[
              _buildButton('0'),
              _buildButton('C'),
              _buildButton('='),
              _buildButton('+'),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildButton(String label) {
    return Expanded(
      child: ElevatedButton(
        onPressed: () => _onButtonPressed(label),
        child: Text(
          label,
          style: TextStyle(fontSize: 24.0),
        ),
      ),
    );
  }
}
